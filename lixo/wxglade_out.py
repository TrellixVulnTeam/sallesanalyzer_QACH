#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.3 on Sun Oct  7 20:35:39 2018
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import os
import main
import matplotlib
matplotlib.use('WXAgg')
# end wxGlade

# end of class ChooseFile

class Gráficos(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Gráficos.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((851, 616))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Gráficos.__set_properties
        self.SetTitle(u"Gr\u00e1ficos")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Gráficos.__do_layout
        mainSizer = wx.BoxSizer(wx.VERTICAL)
        sizerRow2 = wx.BoxSizer(wx.HORIZONTAL)
        sizerRow1 = wx.BoxSizer(wx.HORIZONTAL)
        sizerRow1.Add((0, 0), 0, 0, 0)
        sizerRow1.Add((0, 0), 0, 0, 0)
        mainSizer.Add(sizerRow1, 1, wx.EXPAND, 0)
        sizerRow2.Add((0, 0), 0, 0, 0)
        sizerRow2.Add((0, 0), 0, 0, 0)
        mainSizer.Add(sizerRow2, 1, wx.EXPAND, 0)
        mainSizer.Add((0, 0), 0, 0, 0)
        self.SetSizer(mainSizer)
        self.Layout()
        # end wxGlade

# end of class Gráficos
class Principal(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Principal.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 153))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "Carregar aquivo (CSV)...", u"Carregar dados atrav\u00e9s de arquivo CSV")
        self.frame_menubar.Append(wxglade_tmp_menu, "Dados")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_3 = wx.Button(self, wx.ID_ANY, "Procurar")
        self.button_2 = wx.Button(self, wx.ID_ANY, "Carregar", style=wx.BORDER_NONE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.getPath, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.setCsv, self.button_2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Principal.__set_properties
        self.SetTitle("LUCRO 2000")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("C:\\git\\sallesanalyzer\\icon.ico", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Principal.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.GridSizer(1, 2, 0, 0)
        sizer_2 = wx.GridSizer(1, 1, 0, 0)
        CSV = wx.StaticText(self, wx.ID_ANY, "Carregar arquivo de dados (.CSV)...", style=wx.ALIGN_CENTER)
        sizer_2.Add(CSV, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.text_ctrl_1, 0, wx.ALL | wx.EXPAND, 5)
        sizer_3.Add(self.button_3, 0, wx.ALIGN_RIGHT, 0)
        sizer_3.Add(self.button_2, 0, wx.RIGHT, 6)
        sizer_1.Add(sizer_3, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def teste(self, event):  # wxGlade: Principal.<event_handler>
        sndWindow = MyDialog()
        sndWindow.Show()
        event.Skip()
    def setCsv(self, event):  # wxGlade: Principal.<event_handler>
        main.main(self.text_ctrl_1.GetValue())
        event.Skip()
    def getPath(self, event): # wxGlade: Principal.<event_handler>
        wildcard = "CSV File (*.csv)|*.csv|" \
            "All files (*.*)|*.*"
        dlg = wx.FileDialog(
            self, message="Escolha um arquivo",
            defaultDir=os.getcwd(), 
            defaultFile="*.csv",
            wildcard=wildcard,
            style=wx.FD_OPEN | wx.FD_CHANGE_DIR
        )
        if dlg.ShowModal() == wx.ID_OK:
            paths = dlg.GetPaths()
            for path in paths:
                self.text_ctrl_1.SetValue(path)
                break
        dlg.Destroy()

# end of class Principal

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Principal(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
